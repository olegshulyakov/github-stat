version: '3.8'

networks:
  demo_network:

services:

  pmm-server:
    image: percona/pmm-server:3
    platform: "linux/amd64"
    container_name: pmm-server
    restart: always
    ports:
      - 8080:80
      - "443:8443"
    volumes:
      - pmm-data:/srv
    healthcheck:
      test: ["CMD-SHELL", "curl -k -f -L https://pmm-server:8443 > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - demo_network

  pmm-client:
    image: percona/pmm-client:3
    container_name: pmm-client
    depends_on:
      pmm-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server:8443
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: >
        pmm-admin status --wait=10s &&
        pmm-admin add mysql --query-source=perfschema --username=root --password=password --host=mysql --port=3306 &&
        pmm-admin add postgresql --username=postgres --password=password --host=postgres --port=5432 --query-source=pgstatmonitor &&
        pmm-admin add mongodb --username=databaseAdmin --password=password --host=mongodb --port=27017 --query-source=profiler
    networks:
      - demo_network

volumes:
  pmm-data:
  